---
title: "Interval Length (N Unknown)"
author: "Rachel Roggenkemper"
format: html
editor: visual
---

```{r}
#| message: false

library(extraDistr)
library(tidyverse)
library(data.table)

source('../functions.R', encoding = 'UTF-8')
source('../functions_vec.R', encoding = 'UTF-8')
```

# Expected Length Function

```{r}
# expected_length_N_unknown <- function(data_frame, 
#                                       lb_col_name, 
#                                       ub_col_name, 
#                                       M,  # fixed M
#                                       m,  # fixed m
#                                       N_max  # largest N value you want to calculate
#                                       ) {
#   # Create an empty data frame to store results
#   results <- data.frame(N = integer(), ExpectedLength = numeric())
#   
#   # Loop through each N value from M to N_max
#   for (current_N in M:N_max) {
#     sum_expected_length <- 0
#     
#     # Determine the range of x values to consider
#     x_max <- min(max(data_frame$x), current_N - M)
#     
#     for (xi in 0:x_max) {
#       # Calculate the interval length for this x
#       length <- data_frame[[ub_col_name]][data_frame$x == xi] - 
#                 data_frame[[lb_col_name]][data_frame$x == xi] + 1
#       
#       # Calculate the probability using the Negative Hypergeometric PMF
#       prob <- ngh_pmf(x = xi, N = current_N, M = M, m = m)
#       
#       # Accumulate the expected length
#       sum_expected_length <- sum_expected_length + (length * prob)
#     }
#     
#     # Store the result in the results data frame
#     results <- rbind(results, data.frame(N = current_N, ExpectedLength = sum_expected_length))
#   }
#   
#   return(results)
# }
```

```{r}
#| label: optimized version of above 

expected_length_N_unknown <- function(data_frame, 
                                      lb_col_name, 
                                      ub_col_name, 
                                      M,  # fixed M
                                      m,  # fixed m
                                      N_max  # largest N value you want to calculate
) {
  # 1) Extract x from the data_frame and ensure it's unique + sorted 
  #    (assuming data_frame has one row per x)
  df_small <- data_frame[, c("x", lb_col_name, ub_col_name)]
  df_small <- df_small[order(df_small$x), ]
  
  # 2) Precompute the interval lengths for each x.
  #    length(x) = ub - lb + 1
  lengths_vec <- df_small[[ub_col_name]] - df_small[[lb_col_name]] + 1
  
  # 3) We'll iterate over N from M to N_max, computing expected length.
  N_values <- seq.int(M, N_max)
  
  # Pre-allocate a numeric vector for storing expected length for each N.
  exp_len_vec <- numeric(length(N_values))
  
  # 4) For each N, figure out the max x we can use:
  #    x_max = min(max(df_small$x), N - M)
  #    Then sum over x in [0, x_max] of (lengths[x] * ngh_pmf(x, N, M, m)).
  max_x_all <- max(df_small$x)
  
  for (i in seq_along(N_values)) {
    current_N <- N_values[i]
    
    # Determine x_max for current N
    x_max <- min(max_x_all, current_N - M)
    if (x_max < 0) {
      # If x_max < 0, no valid x => expected length is 0
      exp_len_vec[i] <- 0
      next
    }
    
    # Identify which rows of df_small correspond to x in [0, x_max].
    # Because df_small$x is sorted, we can do a direct index.
    valid_indices <- which(df_small$x <= x_max)
    
    # Corresponding x values
    x_sub <- df_small$x[valid_indices]
    # Corresponding lengths
    lengths_sub <- lengths_vec[valid_indices]
    
    # Compute PMF for each x_sub
    pmf_vec <- sapply(x_sub, function(xx) {
      ngh_pmf(x = xx, N = current_N, M = M, m = m)
    })
    
    # Sum up length * pmf
    exp_len_vec[i] <- sum(lengths_sub * pmf_vec)
  }
  
  # 5) Build the final results data frame
  results <- data.frame(
    N = N_values,
    ExpectedLength = exp_len_vec
  )
  
  return(results)
}
```

# Average Length Function

```{r}
average_length <- function(data_frame, lb_col_name, ub_col_name) {
  length = data_frame[[ub_col_name]] - data_frame[[lb_col_name]] + 1
  average_length = mean(length)
  return(average_length)
}
```

# Plots of Expected and Average Length

## Plot of Expected Length

### Data Preparation

#### Analog to Clopper Pearson

##### M = 25, m = 5

```{r}
# ngh_pmf(x = 26, N = 200, M = 25, m = 5)
# 
# ngh_pmf(x = 75, N = 200, M = 25, m = 5)
# ngh_pmf(x = 75, N = 200, M = 25, m = 5) < 0.001
```

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1200
N_values = M:200

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 75)

exp_length_acp_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "lower_bound", 
                                                    ub_col_name = "upper_bound", 
                                                    M = M, m = m, N_max = 200)

exp_length_acp_M25_m5$Method = "Analog to Clopper-Pearson"
exp_length_acp_M25_m5$M = M
exp_length_acp_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
# ngh_pmf(x = 26, N = 200, M = 25, m = 15)
# ngh_pmf(x = 26, N = 200, M = 25, m = 15) < 0.001
```

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 25)

exp_length_acp_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "lower_bound", 
                                                    ub_col_name = "upper_bound", 
                                                    M = M, m = m, N_max = 200)

exp_length_acp_M25_m15$Method = "Analog to Clopper-Pearson"
exp_length_acp_M25_m15$M = M
exp_length_acp_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
# ngh_pmf(x = 26, N = 200, M = 50, m = 5)
# 
# ngh_pmf(x = 39, N = 200, M = 50, m = 5)
# ngh_pmf(x = 39, N = 200, M = 50, m = 5) < 0.001
```

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 39)

exp_length_acp_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "lower_bound", 
                                                    ub_col_name = "upper_bound", 
                                                    M = M, m = m, N_max = 200)

exp_length_acp_M50_m5$Method = "Analog to Clopper-Pearson"
exp_length_acp_M50_m5$M = M
exp_length_acp_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
# ngh_pmf(x = 26, N = 200, M = 50, m = 15)
# 
# ngh_pmf(x = 76, N = 200, M = 50, m = 15) 
# ngh_pmf(x = 76, N = 200, M = 50, m = 15) < 0.001
```

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 76)

exp_length_acp_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "lower_bound", 
                                                    ub_col_name = "upper_bound", 
                                                    M = M, m = m, N_max = 200)

exp_length_acp_M50_m15$Method = "Analog to Clopper-Pearson"
exp_length_acp_M50_m15$M = M
exp_length_acp_M50_m15$m = m
```

#### MST

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1250
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 75)

exp_length_mst_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_mst_M25_m5$Method = "MST"
exp_length_mst_M25_m5$M = M
exp_length_mst_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 25)

exp_length_mst_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_mst_M25_m15$Method = "MST"
exp_length_mst_M25_m15$M = M
exp_length_mst_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 39)

exp_length_mst_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_mst_M50_m5$Method = "MST"
exp_length_mst_M50_m5$M = M
exp_length_mst_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 76)

exp_length_mst_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_mst_M50_m15$Method = "MST"
exp_length_mst_M50_m15$M = M
exp_length_mst_M50_m15$m = m
```

#### CG

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1250
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 75)

exp_length_cg_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cg_M25_m5$Method = "CG"
exp_length_cg_M25_m5$M = M
exp_length_cg_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 25)

exp_length_cg_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cg_M25_m15$Method = "CG"
exp_length_cg_M25_m15$M = M
exp_length_cg_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 39)

exp_length_cg_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cg_M50_m5$Method = "CG"
exp_length_cg_M50_m5$M = M
exp_length_cg_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 76)

exp_length_cg_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cg_M50_m15$Method = "CG"
exp_length_cg_M50_m15$M = M
exp_length_cg_M50_m15$m = m
```

#### BK

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1250
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 75)

exp_length_bk_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_bk_M25_m5$Method = "BK"
exp_length_bk_M25_m5$M = M
exp_length_bk_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 25)

exp_length_bk_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_bk_M25_m15$Method = "BK"
exp_length_bk_M25_m15$M = M
exp_length_bk_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 39)

exp_length_bk_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_bk_M50_m5$Method = "BK"
exp_length_bk_M50_m5$M = M
exp_length_bk_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 76)

exp_length_bk_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_bk_M50_m15$Method = "BK"
exp_length_bk_M50_m15$M = M
exp_length_bk_M50_m15$m = m
```

#### Blaker

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1250
N_values = M:200

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 75)

exp_length_blaker_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_blaker_M25_m5$Method = "Blaker"
exp_length_blaker_M25_m5$M = M
exp_length_blaker_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 25)

exp_length_blaker_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_blaker_M25_m15$Method = "Blaker"
exp_length_blaker_M25_m15$M = M
exp_length_blaker_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 39)

exp_length_blaker_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_blaker_M50_m5$Method = "Blaker"
exp_length_blaker_M50_m5$M = M
exp_length_blaker_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 76)

exp_length_blaker_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_blaker_M50_m15$Method = "Blaker"
exp_length_blaker_M50_m15$M = M
exp_length_blaker_M50_m15$m = m
```

#### CMC

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 1250
N_values = M:200

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 75)

exp_length_cmc_M25_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cmc_M25_m5$Method = "CMC"
exp_length_cmc_M25_m5$M = M
exp_length_cmc_M25_m5$m = m
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 25)

exp_length_cmc_M25_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cmc_M25_m15$Method = "CMC"
exp_length_cmc_M25_m15$M = M
exp_length_cmc_M25_m15$m = m
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1400
N_values = M:200

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 39)

exp_length_cmc_M50_m5 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cmc_M50_m5$Method = "CMC"
exp_length_cmc_M50_m5$M = M
exp_length_cmc_M50_m5$m = m
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 500
N_values = M:200

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 76)

exp_length_cmc_M50_m15 <- expected_length_N_unknown(data_frame = CI, 
                                                    lb_col_name = "ci_lb", 
                                                    ub_col_name = "ci_ub", 
                                                    M = M, m = m, N_max = 200)

exp_length_cmc_M50_m15$Method = "CMC"
exp_length_cmc_M50_m15$M = M
exp_length_cmc_M50_m15$m = m
```

### Plot

```{r}
#| eval: false

df_list <- list(exp_length_acp_M25_m5, 
                exp_length_acp_M25_m15,
                exp_length_acp_M50_m5,
                exp_length_acp_M50_m15,
                exp_length_mst_M25_m5,
                exp_length_mst_M25_m15,
                exp_length_mst_M50_m5,
                exp_length_mst_M50_m15,
                exp_length_cg_M25_m5,
                exp_length_cg_M25_m15,
                exp_length_cg_M50_m5,
                exp_length_cg_M50_m15,
                exp_length_bk_M25_m5,
                exp_length_bk_M25_m15,
                exp_length_bk_M50_m5,
                exp_length_bk_M50_m15,
                exp_length_blaker_M25_m5,
                exp_length_blaker_M25_m15,
                exp_length_blaker_M50_m5,
                exp_length_blaker_M50_m15,
                exp_length_cmc_M25_m5,
                exp_length_cmc_M25_m15,
                exp_length_cmc_M50_m5,
                exp_length_cmc_M50_m15
                )
expected_value_df <- bind_rows(df_list)

# write.csv(expected_value_df, file.path(getwd(), "N_unknown_expected_length.csv"),
#           row.names = FALSE)
```

```{r}
#| message: false

expected_value_plot_df <- read_csv(here::here("N_Unknown", 
                                              "N_unknown_expected_length.csv"))

# Define a distinct color palette
distinct_colors <- c("red", "blue", "green", "purple", "orange", "cyan")

# Custom labels for M and m
M_labels <- c("25" = "M = 25", "50" = "M = 50")
m_labels <- c("5" = "m = 5", "15" = "m = 15")

# Combine M and m labels into a single factor for facetting
expected_value_plot_df$facet_label <- factor(
  paste("M =", expected_value_plot_df$M, ", m =", expected_value_plot_df$m),
  levels = c("M = 25 , m = 5", "M = 50 , m = 5", "M = 25 , m = 15", "M = 50 , m = 15")
)

# Create the plot using facet_wrap for independent axes
ggplot(expected_value_plot_df, aes(x = N, y = ExpectedLength, color = Method)) +
  geom_line(linewidth = 1, alpha = 0.6) +  # Adjust line thickness and transparency
  scale_color_manual(values = distinct_colors) +  # Use the distinct color palette
  facet_wrap(~ facet_label, scales = "free") +  # Use facet_wrap with free scales
  labs(x = "N", y = "Expected Length", color = "Method") +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    strip.text = element_text(size = 12),  # Increase facet label size for clarity
    panel.spacing = unit(1, "lines"),  # Increase spacing between panels for clarity
    axis.title.y = element_text(margin = margin(r = 10)),  # Add margin to y-axis label
    axis.title.x = element_text(margin = margin(t = 10))   # Add margin to x-axis label
  )
```

## Plot of Average Length and Average Coverage Probability

### Data Preparation

Note: Got max_N by plugging in M, m, and conf_level to get confidence intervals and keep increasing max_N til I get intervals for x: 0 to 25 and make sure max_N big enough so coverage_prob_ACP_N_unknown_vec() output isn't NA (plug in largest N_value to test).

#### Analog to Clopper Pearson

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 425
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "lower_bound", ub_col_name = "upper_bound")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

coverage_df = do.call(rbind, lapply(N_values, function(N) coverage_prob_ACP_N_unknown_vec(M, N, m, conf_level, max_N)))
mean(coverage_df$coverage_prob)

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "lower_bound", ub_col_name = "upper_bound")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

coverage_df = do.call(rbind, lapply(N_values, function(N) coverage_prob_ACP_N_unknown_vec(M, N, m, conf_level, max_N)))
mean(coverage_df$coverage_prob)

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 870
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "lower_bound", ub_col_name = "upper_bound")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

coverage_df = do.call(rbind, lapply(N_values, function(N) coverage_prob_ACP_N_unknown_vec(M, N, m, conf_level, max_N)))
mean(coverage_df$coverage_prob)

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 210
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- CI_Analog_CP_N_Unknown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "lower_bound", ub_col_name = "upper_bound")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

coverage_df = do.call(rbind, lapply(N_values, function(N) coverage_prob_ACP_N_unknown_vec(M, N, m, conf_level, max_N)))
mean(coverage_df$coverage_prob)

Sys.time()
```

#### MST

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 505
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

mst_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

mst_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1160
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

mst_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 220
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "MST") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

mst_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

#### CG

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 550
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cg_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "CG") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cg_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1165
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                      max_N = max_N, procedure = "CG") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cg_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 230
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                      max_N = max_N, procedure = "CG") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cg_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

#### BK

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 470
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

bk_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

bk_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 1000
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

bk_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 220
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- minimal_cardinality_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                                          max_N = max_N, procedure = "BK") %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

bk_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

#### Blaker

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 425
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

blaker_ac_N_unkown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

blaker_ac_N_unkown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 870
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

blaker_ac_N_unkown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 210
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- blaker_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                             max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

blaker_ac_N_unkown_vec(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

#### CMC

##### M = 25, m = 5

```{r}
#| eval: false

M = 25
m = 5
conf_level = 0.95
max_N = 380
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cmc_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 25, m = 15

```{r}
#| eval: false

M = 25
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cmc_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 5

```{r}
#| eval: false

M = 50
m = 5
conf_level = 0.95
max_N = 770
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cmc_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

##### M = 50, m = 15

```{r}
#| eval: false

M = 50
m = 15
conf_level = 0.95
max_N = 205
N_values = M:200
```

```{r}
#| eval: false

Sys.time()

CI <- cmc_ci_N_unkown_vec(M = M, m = m, conf_level = conf_level, 
                          max_N = max_N) %>%
  filter(x <= 25)

average_length(data_frame = CI, lb_col_name = "ci_lb", ub_col_name = "ci_ub")

Sys.time()
```

```{r}
#| eval: false

Sys.time()

cmc_ac_N_unknown_direct(M = M, m = m, conf_level = conf_level, max_N = max_N) %>%
  filter(N <= 200) %>%
  summarize(avg_coverage = mean(coverage_prob, na.rm = TRUE))

Sys.time()
```

### Plot

```{r}
#| message: false

average_length_cp_df <- read_csv(here::here("N_Unknown", "N Unknown_ Average Length and Coverage Probability (X_0-25, N_M_200).csv"))
```

```{r}
average_length_cp_plot_df <- average_length_cp_df

# Combine M and m labels into a single factor for facetting
average_length_cp_plot_df$facet_label <- factor(
  paste("M =", average_length_cp_plot_df$M, ", m =", average_length_cp_plot_df$m),
  levels = c("M = 25 , m = 5", "M = 50 , m = 5", "M = 25 , m = 15", "M = 50 , m = 15")
)

# Define a distinct color palette
distinct_colors <- c("red", "blue", "green", "purple", "orange", "cyan")

# Create the scatter plot using facet_wrap for independent axes
ggplot(average_length_cp_plot_df, aes(x = AverageLength, 
                                      y = AverageCoverageProbability, 
                                      color = Method)) +
  geom_point(size = 3, alpha = 0.5) +  # Adjust point size and transparency
  geom_hline(yintercept = 0.95, color = "red", linetype = "dashed") +
  facet_wrap(~ facet_label, scales = "free") +  # Use facet_wrap with free scales
  scale_color_manual(values = distinct_colors) +  # Apply the distinct color palette
  labs(x = "Average Length", y = "Average Coverage Probability", color = "Method") +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    strip.text = element_text(size = 12)  # Increase facet label size for clarity
  )
```

M = 25, m = 5

-   x: 0 to 25

-   N: 25 to 200

M = 25, m = 15

-   x: 0 to 25

-   N: 25 to 200

M = 50, m = 5

-   x: 0 to 25

-   N: 50 to 200

M = 50, m = 15

-   x: 0 to 25

-   N: 50 to 200
